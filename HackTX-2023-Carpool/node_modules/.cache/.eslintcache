[{"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\index.js":"1","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\App.js":"2","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\Footer.js":"3","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\Header.js":"4","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\DriverSignUp.js":"5","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\PassengerSignUp.js":"6","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\navbar.js":"7","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\styles.js":"8","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\firebase.js":"9"},{"size":254,"mtime":1697978334285,"results":"10","hashOfConfig":"11"},{"size":1128,"mtime":1697979201512,"results":"12","hashOfConfig":"11"},{"size":384,"mtime":1697978334282,"results":"13","hashOfConfig":"11"},{"size":237,"mtime":1697978334283,"results":"14","hashOfConfig":"11"},{"size":4148,"mtime":1697979201512,"results":"15","hashOfConfig":"11"},{"size":8915,"mtime":1697979201512,"results":"16","hashOfConfig":"11"},{"size":1105,"mtime":1697979201519,"results":"17","hashOfConfig":"11"},{"size":469,"mtime":1697980460546,"results":"18","hashOfConfig":"11"},{"size":944,"mtime":1697979201512,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"7l888a",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\index.js",[],[],["53"],"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\App.js",[],[],"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\Footer.js",["54"],[],"const Footer = () => {\n    return (  \n        <footer className=\"footer\">\n            <a href=\"\" className=\"\">Documentation</a>\n\n            <ul>\n                <li>Kseniya Satsevich</li>\n                <li>Kenta Fukuchi</li>\n                <li>Kaustuv Panthi</li>\n                <li>Ibrahim Eren Bisen</li>\n            </ul>\n        </footer>\n\n\n\n    );\n}\n \nexport default Footer;","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\Header.js",["55","56"],[],"const Header = () => {\n    return ( \n    <header className=\"\">\n\n        <a href=\"\" className=\"\">About Us</a>\n            \n        <a href=\"\" className=\"\" >Create a Carpool</a>\n        \n    </header>\n    );\n    \n}\n \nexport default Header;","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\DriverSignUp.js",["57","58"],[],"import React, { useState } from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, doc, setDoc } from \"firebase/firestore\"; // Import the necessary Firestore functions\nimport { Link } from \"react-router-dom\";\nimport { style } from \"./styles\";\n\nfunction DriverSignUp() {\n  const [input, setInput] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    seats: 4,\n    pickupTime: \"\",\n  });\n\n  const [signupLink, setSignupLink] = useState(null);\n\n  const createTodo = async (e) => {\n    e.preventDefault();\n    if (!input.firstName || !input.lastName || !input.phoneNumber) {\n      alert(\n        \"Please enter valid input for First Name, Last Name, and Phone Number\"\n      );\n      return;\n    }\n\n    const passengers = Array(input.seats).fill(\"\"); // Initialize the passengers array\n\n    const driverData = {\n      firstName: input.firstName,\n      lastName: input.lastName,\n      phoneNumber: input.phoneNumber,\n      address: input.address,\n      seats: input.seats,\n      passengers: passengers, // Include the passengers data\n    };\n\n    // Create a new driver document in the \"Driver\" collection with a custom document ID\n    // const driverId = `${input.firstName}-${input.lastName}-${input.phoneNumber}`;\n    // const driverDocRef = doc(db, \"Driver\", driverId);\n    const driverDocRef = await addDoc(collection(db, \"Driver\"), driverData);\n    const driverId = driverDocRef.id;\n\n    // Set the data for the driver document\n    await setDoc(driverDocRef, driverData);\n\n    // Generate and set the signup link\n    const signupLink = `/passenger-signup/${driverId}`;\n    setSignupLink(signupLink);\n\n    const passengersCollection = collection(driverDocRef, \"passengers\");\n\n    setInput({\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n      seats: 4,\n      pickupTaime: \"\",\n      passengers: passengers,\n    });\n  };\n\n  return (\n    <div className={style.bg}>\n    <div className={style.container}>\n      <h2 className={style.heading}>Driver Sign-Up</h2>\n      <form onSubmit={createTodo}>\n        <input\n          type=\"text\"\n          className={style.input}\n          placeholder=\"First Name\"\n          value={input.firstName}\n          onChange={(e) => setInput({ ...input, firstName: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          className={style.input}\n          placeholder=\"Last Name\"\n          value={input.lastName}\n          onChange={(e) => setInput({ ...input, lastName: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          className={style.input}\n          placeholder=\"Phone Number\"\n          value={input.phoneNumber}\n          onChange={(e) => setInput({ ...input, phoneNumber: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          className={style.input}\n          placeholder=\"Pickup Time\" // New input field for pickup time\n          value={input.pickupTime} // Value for pickup time\n          onChange={(e) => setInput({ ...input, pickupTime: e.target.value })} // Handle pickup time input\n        />\n        <input\n          type=\"text\"\n          className={style.input}\n          placeholder=\"Address\" // New input field for address\n          value={input.address} // Value for address\n          onChange={(e) => setInput({ ...input, address: e.target.value })} // Handle address input\n        />\n        <input\n          type=\"number\"\n          className={style.input}\n          placeholder=\"Seats Available\" // New input field for the number of seats\n          value={input.seats} // Value for seats\n          onChange={(e) => setInput({ ...input, seats: e.target.value })} // Handle seats input\n        />\n        <button type=\"submit\" className={style.button}>\n          Sign Up\n        </button>\n      </form>\n    </div>\n    <div className={style.container}>\n      {signupLink && (\n        <div className={style.button}>\n          <p>Your unique signup link is:</p>\n          <Link to={signupLink} className={style.count}>\n            {signupLink}\n          </Link>\n        </div>\n      )}\n    </div>\n    </div>\n  );\n}\n\nexport default DriverSignUp;\n","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\PassengerSignUp.js",["59","60","61"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { doc, getDoc, collection, addDoc, query, onSnapshot, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { style } from \"./styles\";\n\nfunction PassengerSignUp() {\n  const { driverId } = useParams();\n  const [driverData, setDriverData] = useState(null);\n  const [passengerForm, setPassengerForm] = useState({\n    name: \"\",\n    phoneNumber: \"\",\n  });\n  const [passengers, setPassengers] = useState([]);\n  let [remainingSpots, setRemainingSpots] = useState(0); // Track available spots\n  const [showNoSpotsPopup, setShowNoSpotsPopup] = useState(false); // State for the pop-up\n  const [editPassengerIndex, setEditPassengerIndex] = useState(null);\n  const [verifyPhoneNumber, setVerifyPhoneNumber] = useState(\"\"); // State for verifying phone number\n  const [isVerified, setIsVerified] = useState(false); // State to track phone number verification\n  const [isConfirmationPopupOpen, setConfirmationPopupOpen] = useState(false);\n  const [isLeaving, setIsLeaving] = useState(false);\n\n  const unsubscribeRef = React.useRef(null);\n\n  const closePopup = () => {\n    setShowNoSpotsPopup(false);\n  };\n\n  const openEditPopup = (index) => {\n    setEditPassengerIndex(index);\n    setVerifyPhoneNumber(\"\");\n  };\n\n  const handleVerifyPhoneNumber = () => {\n    // Implement your phone number verification logic here\n    // Example: if (verifyPhoneNumber === passengers[editPassengerIndex].phoneNumber) setIsVerified(true);\n    setIsVerified(true); // For testing, consider implementing your own logic\n  };\n\n  const handleLeaveOrStay = (action) => {\n    if (action === \"leave\") {\n      // Implement the logic to remove the passenger from the list\n      // Example: const updatedPassengers = passengers.filter((_, index) => index !== editPassengerIndex);\n      // setPassengers(updatedPassengers);\n\n      deleteDoc(doc(db, \"Driver\", driverId, \"passengers\", passengers[editPassengerIndex].id));\n\n      setIsLeaving(true);\n    } else {\n      setConfirmationPopupOpen(true);\n    }\n\n    setEditPassengerIndex(null);\n  };\n\n  const confirmLeaveOrStay = () => {\n    if (isLeaving) {\n      // Implement any additional logic here\n    } else {\n      // Implement any additional logic for staying\n    }\n\n    setConfirmationPopupOpen(false);\n  };\n\n  useEffect(() => {\n    const fetchDriverData = async () => {\n      try {\n        const driverDocRef = doc(db, \"Driver\", driverId);\n        const driverDocSnapshot = await getDoc(driverDocRef);\n\n        if (driverDocSnapshot.exists()) {\n          const data = driverDocSnapshot.data();\n          setDriverData(data);\n        } else {\n          console.error(\"Driver data not found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching driver data:\", error);\n      }\n    };\n\n    fetchDriverData();\n\n    const fetchPassengers = async () => {\n      try {\n        const passengersCollectionRef = collection(db, \"Driver\", driverId, \"passengers\");\n        const q = query(passengersCollectionRef);\n\n        unsubscribeRef.current = onSnapshot(q, (snapshot) => {\n          const passengerList = [];\n          snapshot.forEach((doc) => {\n            passengerList.push({ id: doc.id, ...doc.data() });\n          });\n          setPassengers(passengerList);\n        });\n      } catch (error) {\n        console.error(\"Error fetching passenger list:\", error);\n      }\n    };\n\n    fetchPassengers();\n\n    return () => {\n      if (unsubscribeRef.current) {\n        unsubscribeRef.current();\n      }\n    };\n  }, [driverId]);\n\n  const handlePassengerFormSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!passengerForm.name || !passengerForm.phoneNumber) {\n      alert(\"Please enter valid passenger information.\");\n      return;\n    }\n\n    if (remainingSpots > 0) {\n      try {\n        const passengersCollectionRef = collection(db, \"Driver\", driverId, \"passengers\");\n        const passengerDocRef = await addDoc(passengersCollectionRef, passengerForm);\n\n        setPassengerForm({\n          name: \"\",\n          phoneNumber: \"\",\n        });\n\n        console.log(\"Passenger sign-up successful. Passenger ID:\", passengerDocRef.id);\n      } catch (error) {\n        console.error(\"Error adding passenger information:\", error);\n      }\n    } else {\n      setShowNoSpotsPopup(true);\n    }\n  };\n\n  const availableSeats = driverData ? driverData.seats : 0;\n  remainingSpots = availableSeats - passengers.length;\n\n  return (\n    <div className={style.bg}>\n      <div className={style.container}>\n        {driverData && (\n          <div className=\"border p-4 rounded-md shadow-lg my-4\">\n            <h1 className={style.heading}>Driver Information</h1>\n            <p className=\"text-gray-800\">\n              <strong>Name:</strong> {driverData.firstName} {driverData.lastName}\n            </p>\n            <p className=\"text-gray-800\">\n              <strong>Phone Number:</strong> {driverData.phoneNumber}\n            </p>\n            <p className=\"text-gray-800\">\n              <strong>Address:</strong> {driverData.address}\n            </p>\n            <p className=\"text-gray-800\">\n              <strong>Available Seats:</strong> {availableSeats}\n            </p>\n            <p className=\"text-gray-800\">\n              <strong>Remaining Spots:</strong> {remainingSpots}\n            </p>\n          </div>\n        )}\n        <h2 className={style.heading}>Passenger Sign-Up Form</h2>\n        <form onSubmit={handlePassengerFormSubmit} className={style.form}>\n          <input\n            type=\"text\"\n            className={style.input}\n            placeholder=\"Name\"\n            value={passengerForm.name}\n            onChange={(e) =>\n              setPassengerForm({ ...passengerForm, name: e.target.value })\n            }\n          />\n          <input\n            type=\"text\"\n            className={style.input}\n            placeholder=\"Phone Number\"\n            value={passengerForm.phoneNumber}\n            onChange={(e) =>\n              setPassengerForm({\n                ...passengerForm,\n                phoneNumber: e.target.value,\n              })\n            }\n          />\n          <button type=\"submit\" className={style.button}>\n            Sign Up\n          </button>\n        </form>\n      </div>\n\n      <div className={style.container}>\n        <h2 className={style.heading}>Current Passengers</h2>\n        <ul>\n          {passengers.map((passenger, index) => (\n            <li key={index}>\n              {editPassengerIndex === index ? (\n                <div>\n                  {isVerified ? (\n                    <div>\n                      <p>Options:</p>\n                      <button className={style.button} onClick={() => handleLeaveOrStay(\"leave\")}>Leave </button>\n                      <button className={style.button} onClick={() => handleLeaveOrStay(\"stay\")}>Stay</button>\n                      <button className={style.button} onClick={() => setEditPassengerIndex(null)}>Log Out</button>\n                    </div>\n                  ) : (\n                    <div>\n                      <p>Verify your identity:</p>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Enter your phone number\"\n                        value={verifyPhoneNumber}\n                        onChange={(e) => setVerifyPhoneNumber(e.target.value)}\n                      />\n                      <button className={style.button} onClick={handleVerifyPhoneNumber}>Verify</button>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div>\n                  {passenger.name} - <button className={style.button} onClick={() => openEditPopup(index)}>Edit</button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {showNoSpotsPopup && (\n        <div className={`fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-4 border border-gray-300 rounded shadow-lg z-10 text-center ${style.popup}`}>\n          <p>Carpool group is full</p>\n          <button className=\"mt-4 px-4 py-2 bg-green-400 text-black rounded hover-bg-blue-700\" onClick={closePopup}>\n            Close\n          </button>\n        </div>\n      )}\n\n      {/* {isConfirmationPopupOpen && (\n        <div className={`fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-white p-4 border border-gray-300 rounded shadow-lg z-10 text-center ${style.popup}`}>\n          <p>Do you want to leave or stay in the carpool group?</p>\n          <button className={style.button} onClick={() => handleLeaveOrStay(\"leave\")}>Leave</button>\n          <button className={style.button} onClick={() => handleLeaveOrStay(\"stay\")}>Stay</button>\n          <button className={style.button} onClick={() => setEditPassengerIndex(null)}>Log Out</button>\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default PassengerSignUp;","C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\navbar.js",[],[],"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\styles.js",[],[],"C:\\Users\\kaust\\Carpool App\\HackTX-2023-Carpool\\src\\components\\firebase.js",["62"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBVbg6Fiewh8i0TjghRCcI9NGzJIrxPPd0\",\n  authDomain: \"hacktx2023-carpool-77ebd.firebaseapp.com\",\n  projectId: \"hacktx2023-carpool-77ebd\",\n  storageBucket: \"hacktx2023-carpool-77ebd.appspot.com\",\n  messagingSenderId: \"762994420279\",\n  appId: \"1:762994420279:web:0a5ce157aa688d1f7fedb2\",\n  measurementId: \"G-30BPRM8WN6\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nexport const db = getFirestore(app);\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":13,"nodeType":"67","endLine":4,"endColumn":37},{"ruleId":"65","severity":1,"message":"66","line":5,"column":9,"nodeType":"67","endLine":5,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":7,"column":9,"nodeType":"67","endLine":7,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":3,"column":30,"nodeType":"70","messageId":"71","endLine":3,"endColumn":33},{"ruleId":"68","severity":1,"message":"72","line":52,"column":11,"nodeType":"70","messageId":"71","endLine":52,"endColumn":31},{"ruleId":"68","severity":1,"message":"73","line":15,"column":24,"nodeType":"70","messageId":"71","endLine":15,"endColumn":41},{"ruleId":"68","severity":1,"message":"74","line":20,"column":10,"nodeType":"70","messageId":"71","endLine":20,"endColumn":33},{"ruleId":"68","severity":1,"message":"75","line":56,"column":9,"nodeType":"70","messageId":"71","endLine":56,"endColumn":27},{"ruleId":"68","severity":1,"message":"76","line":22,"column":7,"nodeType":"70","messageId":"71","endLine":22,"endColumn":16},"no-new-object",["77"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'doc' is defined but never used.","Identifier","unusedVar","'passengersCollection' is assigned a value but never used.","'setRemainingSpots' is assigned a value but never used.","'isConfirmationPopupOpen' is assigned a value but never used.","'confirmLeaveOrStay' is assigned a value but never used.","'analytics' is assigned a value but never used.","no-object-constructor"]